# html 笔记
## 概念
  - 纯文本
	  - 在纯文本编辑器中写的内容就是纯文本格式的
	  - 纯文本不具备字体大小、字体颜色、图片、音频、视频等表现形式
  - 超文本（富文本）
	  - 超过纯文本的
	  - 比纯文本有更加丰富强大的表现形式
	  - 除了有文本还有文本的样式：颜色、大小等
	  - 有图片、音频、视频等
  - 标记、标签
	  - 通过给文本加入标记，使得内容语义更加丰富
	  - 浏览器解析标签，呈现出对应的效果
	  - 分类
		  - 双标签
			  - 同时据有开始标签和结束标签
			  - 如：`<html> 内容 </html>`
		  - 单标签
			  - 自结束标签
			  - 如：`<input/>`

## 网页的标准结构【重点】
  - 网页是一个树状结构
	  ```
	  - html 标签
		  - head 标签
			  - title 标签
		  - body 标签
			  - h1 标签
	  ```	
  - html 标签
	  - 根标签
	  - 有且只有一个
  - head 标签
	  - 不负责显示内容
	  - 其内容是给浏览器看的
		  - 例如 title 的作用是设置标签名
	  - 搜索引擎会读取 head 信息来决定排名
  - body 标签
	  - 显示给终端用户的内容都写在 body 里面
	  - 具体显示的内容
		  - 如 h1 标签

## 注释
  - 语法：`<!-- -->`
  - 注释内容不会在页面中显示，但是在源代码中可以查看
  - 目的：
	  - 给人类看的：程序员自己、同事
	  - 帮助开发人员更容易的读懂代码
		  - 给未来的自己看
		  - 给同事看
	  - 代码临时隐藏
  - 原则
	  - 简单明了
  - 注意
	  - 可以多行注释
	  - 不能嵌套

## 基本标签介绍
  - html 标签
	  - 根标签，有且只有一个
  - head 标签
	  - 主要是给浏览器设置相应参数，不负责显示内容
  - title 标签
	  - 显示标签栏
	  - 用于搜索引擎优化
  - body 标签
	  - 网页的主要内容
  - font 标签【不赞成使用】
	  - 可以设置字体相关的内容

## 属性
  - 属性是标签内部的名值对
	  - 属性名
	  - 属性值
  - 各个名值对之间用空格分开
  - 可以具有多个属性名值对
  - 属性名与属性值之间用等号分隔
  - 属性值用引号包裹
  - 实例
	  - `<font color="red" size='7'>内容</font>`
	  - 注意：size 的可选范围是1~7

## 用户手册文档
  - W3School 文档手册
  - 重要的学习资源
  - 搜索
	  - Ctrl + F

## 浏览器中的开发者工具
  - 浏览器会努力善意的去解析程序员的网页，如果程序员没有按规则写，浏览器也尽量去容忍
  - 示例
	  - h1 标签写到 body 标签外部
	  - 查看源代码
	  - 查看内存中，元素已经完全解析好了的结构
  - 开发者工具是开发中必不可少的神器
  - 各个浏览器都有这个工具，可以使用 F12 打开

## 进制转化
  - [2.进制转化.md](./2.进制转化.md "2.进制转化.md")

## 乱码问题
  - 安装 notepad++
  - 问题重现
	  - 使用记事本
		  - 新建文件
		  - 写入带中文的网页
		  - 修改后缀名为.html
	  - 使用 notepad++
		  - 新建文件
		  - 写入同样的网页
		  - 修改后缀名为.html
	  - 分别使用浏览器打开
		  - IE
		  - Chrome
		  - FireFox
	  - 观察显示的文字
  - 问题分析
	  - 计算机底层存储数据是使用二进制的 01
	  - 观察**写入**数据的编码格式
	  - 观察**读取**数据的编码格式
  - 问题核心：写入数据时和读取数据时编码不一致([3. 编码、解码与字符集.md](./3. 编码、解码与字符集.md "3. 编码、解码与字符集.md"))
  - 问题解决：使得编码一致，或者修改写入，或者修改读出
	  - 浏览器的默认编码格式是计算机决定的
		  - 我们使用的是汉字系统，所以默认编码集是 GB2312
	  - notepad++ 默认使用的编码格式是 utf-8
	  - 修改写入
		  - 设置 notepad++
		  - 设置编码格式为 GB2312
	  - 修改读出
		  - 设置浏览器
		  - Alt --> 查看（View） --> encoding --> gb2312

## html 常用标签
  - 标题【掌握】
	  - h1 ~ h6
		  - 注意：只有六级标题
	  - 语义
		  - 重要性依次降低
	  - h1 标签
		  - 对于搜索引擎中的排名，h1 的重要性仅次于 title 标签
		  - 一般一个页面只有一个 h1
	  - h4、h5、h6 基本不用
  - 段落【掌握】
	  - p 标签
	  - 段落标签独占一行，并且默认具有外边距
  - 换行【掌握】
	  - br 标签
	  - 换行
	  - 自封闭标签
  - 水平线标签
	  - hr 标签
	  - 在页面中输出一条水平线
  - 列表
	  - 无序列表【掌握】
		  - ul 和 li 标签
		  - 默认使用小圆点作为项目符号，实际开发中都需要去掉
		  - 可以嵌套
	  - 有序列表
		  - ol 和 li 标签
		  - 默认使用数字作为项目符号，实际开发中都需要去掉
		  - 实际很少使用
	  - 定义列表
		  - dl、dt 和 dd 标签
		  - 实际很少使用
  - 图片标签【掌握】
	  - img 标签
	  - 自结束标签
	  - 向当前页面中引入一张外部图片
	  - 属性
		  - src    引入的图片在机器上的位置，优先使用相对路径
		  - alt    当图片不能显示的时候会显示出来；搜索引擎通过 alt 属性值识别图片
		  - width  设置图片的宽度
		  - height 设置图片的高度
	  - 注意
		  - 如果只设置**宽高**中的一个属性的话，系统会自动等比例缩放图片

## 实体
  - 问题：文本中的多个空格会默认解析为一个空格，但是我们确实需要显示多个空格
  - 解决：使用实体（转义字符）
  - 语法：
	  - & 开头
	  - ; 结尾
	  - 实体名写在中间
  - 实例
	  - 空格：    `&nbsp;`
	  - 大于号：  `&gt;`
	  - 小于号：  `&lt;`
	  - 版权号：  `&copy;`
  - 查文档
	  - html --> 实体
  - Unicode 编码
	  - `&#x12F4;`

## 图片格式
  - JPG（JPEG）
	  - 优点
		  - 支持颜色多
		  - 体积小
	  - 缺点
		  - 支持有损压缩
		  - 不支持透明
		  - 无动图
	  - 应用场景
		  - 照片
  - GIF
	  - 优点
		  - 动态图
		  - 支持无损压缩
		  - 通常体积比较小
	  - 缺点
		  - 支持的颜色少
		  - 支持简单透明
	  - 应用场景
		  - 动图
		  - logo
  - PGN
	  - 优点
		  - 支持色彩多
		  - 支持复杂透明
		  - 无损压缩
	  - 缺点
		  - 无动图
		  - 体积容易比较大
  - 图片选择的原则
	  - 效果不一致，用效果好的
	  - 效果一致，用体积小的

## 超链接
  - 意义：从一个页面跳转到另一个页面
  - 标签：a 标签（双标签）
  - 属性
	  - href：跳转的目标
	  - 跳转目标
		  - 外部网页 
			  - `<a href='www.baidu.com'>百度</a>`
		  - 自己的其他网页
			  - `<a href='myPage.html'>自己的网页</a>`
		  - 跳转到当前页面的某个位置
			  - 跳转到当前页面的顶部，href='#'
			  - 跳转到某个标签
				  - 为标签添加一个 id 属性
				  - href='#某个id'
	  - target：打开的目标位置
		  - _self 默认值，当前窗口打开新页面
		  - _blank 新窗口打开页面
	  - 浏览器通过历史记录确认某个 a 标签是否访问过

## 其他
  - html 不区分大小写，但是尽量使用小写
	  - 示例
		  - `<h1>标题</h1>`
  - 对于文本中的多个空格和换行都会解析为一个空格
  - 路径【掌握】
	  - 相对路径
		  - 外部资源相对当前资源所在的位置
			  - 向当前目录查找 ./
			  - 向当前目录下的 “父文件夹” 查找 ../
	  - 绝对路径
		  - 外部资源在当前磁盘中的绝对位置
		  - 从根目录开始查找 /
  - 在路径中
	  - . 表示当前目录，./ 表示当前目录下的资源
	  - .. 表示上一层（父）目录
  - id 属性
	  - id 属性是本网页内元素的唯一标识
	  - 所有的元素都可以加 id 属性
	  - id 属性的值在本网页内不能重复
  - name 属性
	  - 起到标识作用
	  - 可以重复，可以标识一组数据
